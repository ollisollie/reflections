Reflections lesson 1

How did viewing a diff between two versions of a file help you see the bug that was introduced?
It was easier to just evaluate the difference. It would have been a tough task in case you have to analyse line by line.

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
When programming it's very easy to make mistakes and having old versions always helps to find the problem. Plus, sometimes some old versions work better for the desired application than the new ones. In those cases, it's very recommended to have all the versions available.

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google docs does?
Pros: You decide when an important change has been done. It avoids non-significant commits.
Cons: Forget to create a commit manually is very common (It happened to me many times)

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?
Because certain files are sometimes interrelated

How can you use the commands git log and git diff to view the history of files?
git log creates the list of all the commits in the repository. Once you localize the commits you are interested in, just copy the IDs and use git diff to see the difference between the commits selected.

How might using version control make you more confident to make changes that could break something?
You make sure that all the changes are registered

Now that you have your workspace set up, what do you want to try using Git for?
An example... ???